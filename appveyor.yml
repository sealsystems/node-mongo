################################################################################
# OPEN SOURCE MODULE
# Remove the comment if you changed the build scripts!
################################################################################

version: "{build}"

# Uncomment to debug via RDP
# init:
#   - ps: iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))
#
# on_finish:
#   - ps: $blockRdp = $true; iex ((new-object net.webclient).DownloadString('https://raw.githubusercontent.com/appveyor/ci/master/scripts/enable-rdp.ps1'))

environment:
  NODE_VERSION: "6.2.2"
  MONGO_VERSION: "3.2.9"
  NSSM_VERSION: "2.24-23-gfb96938"
  CONSUL_VERSION: 0.7.2
  ARTIFACTORY_USER:
    secure: /B+ct89KcPR4erKZ35W6XA==
  ARTIFACTORY_PASSWORD:
    secure: l3K9bhvKpkX7Ir+9CoUvIg==
  PfxUri:
    secure: xJp8gfF/VTZm0xoSPUntkJpAEa+ZwAwsc62eX4PVqqpFda2Bz59T/xhPpDhU8zugtwx6VzV3m8DXJUVQ5Ld1ssmmQbFLHFyAkWTwvy9FQ/A=
  KeyFile: C:\projects\seal.pfx
  CertPassword:
    secure: Du5UE790JqGIWGOiuH/V5Q==
  SignTool: C:\Program Files (x86)\Microsoft SDKs\Windows\v7.1A\Bin\signtool.exe

install:
  - ps: choco install -y curl
  # Install Node.js
  - ps: Install-Product node $env:NODE_VERSION x64
  - curl -k -u %ARTIFACTORY_USER%:%ARTIFACTORY_PASSWORD% https://plossys.jfrog.io/plossys/api/npm/auth > %USERPROFILE%\.npmrc
  - curl -k -u %ARTIFACTORY_USER%:%ARTIFACTORY_PASSWORD% %PfxUri% > %KeyFile%
  - npm config set registry http://plossys.jfrog.io/plossys/api/npm/npm-repo
  # Install Consul
  - ps: >-
      choco install -y consul -version $env:CONSUL_VERSION

      @{
        bind_addr="127.0.0.1"
        bootstrap_expect=1
        cert_file="C:\projects\$($env:APPVEYOR_PROJECT_NAME)\tls\cert.pem"
        data_dir="C:\ProgramData\consul\data"
        key_file="C:\projects\$($env:APPVEYOR_PROJECT_NAME)\tls\key.pem"
        ports=@{
          dns=53
          http=-1
          https=8500
        }
        server=$True
      } | ConvertTo-Json | Out-File -Filepath C:\ProgramData\consul\config\config.json -Encoding ascii

      nssm start consul
  # Install MongoDB with SSL
  - ps: >-
      Write-Host "Uninstalling old MongoDB..."

      msiexec.exe /qn /x `{FE313923-51D6-4FF6-AAF6-A78BEE1AF868`}

      rm -r c:\mongodb

      Write-Host "Installing MongoDB $env:MONGO_VERSION with SSL..."

      $msiPath = "$($env:USERPROFILE)\mongodb-win32-x86_64-2008plus-ssl-$($env:MONGO_VERSION)-signed.msi"

      (New-Object Net.WebClient).DownloadFile("https://fastdl.mongodb.org/win32/mongodb-win32-x86_64-2008plus-ssl-$($env:MONGO_VERSION)-signed.msi", $msiPath)

      cmd /c start /wait msiexec /q /i $msiPath INSTALLLOCATION=C:\mongodb ADDLOCAL="all"

      del $msiPath

      mkdir c:\mongodb\data\db | Out-Null

      mkdir c:\mongodb\log | Out-Null

      Write-Host "Writing configuration..."

      "systemLog:
        destination: file
        path: c:\mongodb\log\mongod.log
      storage:
        dbPath: c:\mongodb\data\db
      net:
        ssl:
          mode: requireSSL
          PEMKeyFile: c:\projects\$($env:APPVEYOR_PROJECT_NAME)\tls\cert-key-combined.pem
      " | Out-File C:\mongodb\mongod.cfg -Encoding utf8

      Write-Host "Starting service..."

      cmd /c start /wait sc create MongoDB binPath= "C:\mongodb\bin\mongod.exe --service --config=C:\mongodb\mongod.cfg" DisplayName= "MongoDB" start= "demand"

      Start-Service mongodb

build: off

test_script:
  - npm install
  - npm install -g roboter-cli
  - npm run bot
