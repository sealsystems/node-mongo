name: Test

on:
  push:
    branches-ignore:
    - master

env:
  CONSUL_VERSION: 0.9.3
  LOG_LEVELS: fatal
  MONGO_VERSION: 3.6.17
  NODE_VERSION: 12.13.1
  TLS_UNPROTECTED: world

jobs:
  Linux:
    runs-on: ubuntu-18.04

    services:
      mongo:
        image: mongo:${{ env.MONGO_VERSION }}
        ports:
        - 27017:27017
      consul:
        image: consul:${{ env.CONSUL_VERSION }}
        ports:
        - 8500:8500

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v1
      with:
        NODE_VERSION: ${{ env.NODE_VERSION }}

    - name: Cache Node.js modules
      uses: actions/cache@v1
      env:
        cache-name: cache-node-modules
      with:
        path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
        key: ${{ runner.os }}-${{ env.cache-name }}-${{ env.NODE_VERSION }}-${{ hashFiles('**/package-lock.json') }}

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm run bot

  Windows:
    runs-on: windows-2019

    steps:
    - uses: actions/checkout@v2

    - name: Use Node.js ${{ env.NODE_VERSION }}
      uses: actions/setup-node@v1
      with:
        NODE_VERSION: ${{ env.NODE_VERSION }}

    - name: Install MongoDB
      run: |
        Write-Host "Downloading https://fastdl.mongodb.org/win32/mongodb-win32-x86_64-2008plus-ssl-$($env:MONGO_VERSION)-signed.zip ..."
        (New-Object Net.WebClient).DownloadFile(
          "https://fastdl.mongodb.org/win32/mongodb-win32-x86_64-2008plus-ssl-$($env:MONGO_VERSION)-signed.zip",
          "C:\mongodb-win32-x86_64-2008plus-ssl-$($env:MONGO_VERSION).zip"
        )

        Write-Host "Extracting zip archive to C:\mongodb ..."
        Expand-Archive "C:\mongodb-win32-x86_64-2008plus-ssl-$($env:MONGO_VERSION).zip" -DestinationPath "C:\"
        Rename-Item "C:\mongodb-win32-x86_64-2008plus-ssl-$($env:MONGO_VERSION)" "C:\mongodb"

        Write-Host "Creating necessary folders in C:\mongodb ..."
        mkdir c:\mongodb\data\db | Out-Null
        mkdir c:\mongodb\log | Out-Null

        Write-Host "Writing MongoDB configuration..."
        "systemLog:
          destination: file
          path: c:\mongodb\log\mongod.log
        storage:
          dbPath: c:\mongodb\data\db
        " | Out-File C:\mongodb\mongod.cfg -Encoding utf8

        Write-Host "Creating MonogDB service..."
        cmd /c start /wait sc create MongoDB binPath= "C:\mongodb\bin\mongod.exe --service --config=C:\mongodb\mongod.cfg" DisplayName= "MongoDB" start= "demand"

        Write-Host "Starting MonogDB service..."
        Start-Service mongodb

    - name: Install Consul
      run: |
        choco install --no-progress -y consul --version $($env:CONSUL_VERSION)
        @{
          bind_addr="127.0.0.1"
          bootstrap_expect=1
          ports=@{
            dns=53
            http=8500
          }
          server=$True
        } | ConvertTo-Json | Out-File -Filepath C:\ProgramData\consul\config\config.json -Encoding ascii
        Restart-Service consul

    # - name: Cache Node.js modules
    #   uses: actions/cache@v1
    #   env:
    #     cache-name: cache-node-modules
    #   with:
    #     path: ~/.npm # npm cache files are stored in `~/.npm` on Linux/macOS
    #     key: ${{ runner.os }}-${{ env.cache-name }}-${{ env.NODE_VERSION }}-${{ hashFiles('**/package-lock.json') }}

    - name: Install dependencies
      run: npm install

    - name: Run tests
      run: npm run bot
